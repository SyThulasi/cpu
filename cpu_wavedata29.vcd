$date
	Wed Mar  9 11:07:34 2022
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module cpu_tb $end
$var wire 32 ! mem_writedata [31:0] $end
$var wire 1 " mem_write $end
$var wire 32 # mem_readdata [31:0] $end
$var wire 1 $ mem_read $end
$var wire 1 % mem_busywait $end
$var wire 6 & mem_address [5:0] $end
$var wire 1 ' WRITEsignal $end
$var wire 8 ( WRITEDATA [7:0] $end
$var wire 1 ) READsignal $end
$var wire 8 * READDATA [7:0] $end
$var wire 32 + PC [31:0] $end
$var wire 1 , BUSYWAITsignal $end
$var wire 8 - ADDRESS [7:0] $end
$var reg 1 . CLK $end
$var reg 32 / INSTRUCTION [31:0] $end
$var reg 1 0 RESET $end
$scope module datamem $end
$var wire 1 . clock $end
$var wire 1 0 reset $end
$var wire 32 1 writedata [31:0] $end
$var wire 1 " write $end
$var wire 1 $ read $end
$var wire 6 2 address [5:0] $end
$var reg 1 % busywait $end
$var reg 1 3 readaccess $end
$var reg 32 4 readdata [31:0] $end
$var reg 1 5 writeaccess $end
$var integer 32 6 i [31:0] $end
$upscope $end
$scope module my_dcache $end
$var wire 1 . clock $end
$var wire 1 % mem_busywait $end
$var wire 32 7 mem_readdata [31:0] $end
$var wire 1 0 reset $end
$var wire 8 8 C_WRITEDATA [7:0] $end
$var wire 1 ' C_WRITE $end
$var wire 1 ) C_READ $end
$var wire 8 9 C_Address [7:0] $end
$var reg 32 : BLOCK [31:0] $end
$var reg 8 ; C_READDATA [7:0] $end
$var reg 3 < address_tag [2:0] $end
$var reg 1 , busywait $end
$var reg 1 = dirtybit $end
$var reg 1 > hit $end
$var reg 3 ? index [2:0] $end
$var reg 6 @ mem_address [5:0] $end
$var reg 1 $ mem_read $end
$var reg 1 " mem_write $end
$var reg 32 A mem_writedata [31:0] $end
$var reg 3 B next_state [2:0] $end
$var reg 2 C offset [1:0] $end
$var reg 1 D readaccess $end
$var reg 3 E state [2:0] $end
$var reg 3 F tag [2:0] $end
$var reg 1 G validbit $end
$var reg 1 H writeaccess $end
$var integer 32 I i [31:0] $end
$upscope $end
$scope module mycpu $end
$var wire 1 . CLK $end
$var wire 32 J INSTRUCTION [31:0] $end
$var wire 1 K ISB $end
$var wire 8 L READdata [7:0] $end
$var wire 1 0 RESET $end
$var wire 1 , WAITsignal $end
$var wire 1 M WRITE_FINAL $end
$var wire 1 N ZERO $end
$var wire 8 O RESULT [7:0] $end
$var wire 8 P OPERAND2 [7:0] $end
$var wire 8 Q OPERAND1 [7:0] $end
$var wire 32 R MUX4OUT [31:0] $end
$var wire 8 S MUX3RESULT [7:0] $end
$var wire 32 T MUX3OUT [31:0] $end
$var wire 8 U MUX2OUT [7:0] $end
$var wire 8 V MUX1OUT [7:0] $end
$var wire 32 W FINAL2 [31:0] $end
$var wire 32 X FINAL1 [31:0] $end
$var reg 3 Y ALU_SELECT [2:0] $end
$var reg 3 Z DESTINATION [2:0] $end
$var reg 8 [ IMMEDIATE [7:0] $end
$var reg 1 \ MEMsignal $end
$var reg 32 ] NEXT [31:0] $end
$var reg 8 ^ OFFSET [7:0] $end
$var reg 8 _ OPCODE [7:0] $end
$var reg 32 ` PC [31:0] $end
$var reg 1 ) READsignal $end
$var reg 3 a SOURCE1 [2:0] $end
$var reg 3 b SOURCE2 [2:0] $end
$var reg 1 c WRITE $end
$var reg 1 ' WRITEsignal $end
$var reg 1 d isBRANCH $end
$var reg 1 e isIMMEDIATE $end
$var reg 1 f isJUMP $end
$var reg 1 g isSUBSTRACT $end
$var reg 32 h targetAddress [31:0] $end
$var reg 8 i twosComplement [7:0] $end
$scope module alu1 $end
$var wire 3 j SELECT [2:0] $end
$var wire 8 k or_result [7:0] $end
$var wire 8 l forward_result [7:0] $end
$var wire 8 m and_result [7:0] $end
$var wire 8 n add_result [7:0] $end
$var wire 8 o DATA2 [7:0] $end
$var wire 8 p DATA1 [7:0] $end
$var reg 8 q RESULT [7:0] $end
$var reg 1 N ZERO $end
$scope module add1 $end
$var wire 8 r DATA2 [7:0] $end
$var wire 8 s DATA1 [7:0] $end
$var reg 8 t RESULT [7:0] $end
$upscope $end
$scope module and1 $end
$var wire 8 u DATA2 [7:0] $end
$var wire 8 v DATA1 [7:0] $end
$var reg 8 w RESULT [7:0] $end
$upscope $end
$scope module forward1 $end
$var wire 8 x DATA2 [7:0] $end
$var reg 8 y RESULT [7:0] $end
$upscope $end
$scope module or1 $end
$var wire 8 z DATA2 [7:0] $end
$var wire 8 { DATA1 [7:0] $end
$var reg 8 | RESULT [7:0] $end
$upscope $end
$upscope $end
$scope module mux1 $end
$var wire 8 } IN1 [7:0] $end
$var wire 1 g SELECT $end
$var wire 8 ~ IN2 [7:0] $end
$var reg 8 !" OUT [7:0] $end
$upscope $end
$scope module mux2 $end
$var wire 8 "" IN1 [7:0] $end
$var wire 8 #" IN2 [7:0] $end
$var wire 1 e SELECT $end
$var reg 8 $" OUT [7:0] $end
$upscope $end
$scope module mux3 $end
$var wire 8 %" IN1 [7:0] $end
$var wire 8 &" IN2 [7:0] $end
$var wire 1 \ SELECT $end
$var reg 8 '" OUT [7:0] $end
$upscope $end
$scope module mux_3 $end
$var wire 32 (" IN1 [31:0] $end
$var wire 32 )" IN2 [31:0] $end
$var wire 1 K SELECT $end
$var reg 32 *" OUT [31:0] $end
$upscope $end
$scope module mux_4 $end
$var wire 32 +" IN1 [31:0] $end
$var wire 32 ," IN2 [31:0] $end
$var wire 1 f SELECT $end
$var reg 32 -" OUT [31:0] $end
$upscope $end
$scope module register $end
$var wire 1 . CLK $end
$var wire 8 ." IN [7:0] $end
$var wire 3 /" INADDRESS [2:0] $end
$var wire 8 0" OUT1 [7:0] $end
$var wire 3 1" OUT1ADDRESS [2:0] $end
$var wire 8 2" OUT2 [7:0] $end
$var wire 3 3" OUT2ADDRESS [2:0] $end
$var wire 1 0 RESET $end
$var wire 1 M WRITE $end
$var integer 32 4" i [31:0] $end
$upscope $end
$scope module shft $end
$var wire 32 5" OUT [31:0] $end
$var wire 32 6" IN [31:0] $end
$upscope $end
$scope module sign_ex $end
$var wire 8 7" unextended [7:0] $end
$var reg 32 8" sign_extended [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 8"
bx 7"
bx 6"
bx00 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
xg
xf
xe
xd
xc
bx b
bx a
bx `
bx _
bx ^
bx ]
x\
bx [
bx Z
bx Y
bx X
bx00 W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
0N
xM
bx L
0K
bx J
bx I
xH
xG
bx F
bx E
xD
bx C
bx B
bx A
bx @
bx ?
x>
x=
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
x5
bx 4
x3
bx 2
bx 1
00
bx /
0.
bx -
x,
bx +
bx *
x)
bx (
x'
bx &
x%
x$
bx #
x"
bx !
$end
#20
0"
0$
b0 B
05
03
0%
b100000000 6
0,
b0 E
10
#30
b1000 I
#40
1.
#50
b0 +
b0 `
b1000 4"
b1000 I
#60
b0 R
b0 -"
b100 T
b100 *"
b100 +"
b100 ]
b100 ("
00
#70
b0 U
b0 o
b0 r
b0 u
b0 x
b0 z
b0 $"
b0 W
b0 5"
b0 X
b0 6"
b0 8"
b0 ^
b0 7"
b0 _
b1 b
b1 3"
b0 a
b0 1"
b0 Z
b0 /"
b1001 [
b1001 ""
b1001 /
b1001 J
#80
b0 S
b0 '"
b0 ."
b100 R
b100 -"
b1001 U
b1001 o
b1001 r
b1001 u
b1001 x
b1001 z
b1001 $"
b0 -
b0 9
b0 O
b0 q
b0 &"
1M
b0 m
b0 w
b0 l
b0 y
0\
b0 Y
b0 j
0f
0d
1e
0g
1c
0.
#90
b1001 S
b1001 '"
b1001 ."
b0 V
b0 !"
b0 #"
b1001 -
b1001 9
b1001 O
b1001 q
b1001 &"
b1001 k
b1001 |
b1001 l
b1001 y
b1001 n
b1001 t
b100 h
b100 )"
b100 ,"
b0 P
b0 ~
b0 2"
b0 (
b0 8
b0 Q
b0 p
b0 s
b0 v
b0 {
b0 0"
#100
b0 i
b0 }
#120
1.
#130
b100 +
b100 `
#140
b1000 R
b1000 -"
b1000 T
b1000 *"
b1000 +"
b1000 ]
b1000 ("
#150
b1 U
b1 o
b1 r
b1 u
b1 x
b1 z
b1 $"
b100 W
b100 5"
b1 X
b1 6"
b1 8"
b1 ^
b1 7"
b1 Z
b1 /"
b1 [
b1 ""
b10000000000000001 /
b10000000000000001 J
b1001 (
b1001 8
b1001 Q
b1001 p
b1001 s
b1001 v
b1001 {
b1001 0"
#160
b1 S
b1 '"
b1 ."
b1 -
b1 9
b1 O
b1 q
b1 &"
b1 l
b1 y
b1 m
b1 w
0.
#170
b1100 h
b1100 )"
b1100 ,"
b1010 n
b1010 t
#200
1.
#210
b1000 +
b1000 `
#220
b1100 R
b1100 -"
b1100 T
b1100 *"
b1100 +"
b1100 ]
b1100 ("
#230
b1 V
b1 !"
b1 #"
b0 W
b0 5"
b0 X
b0 6"
b0 8"
b0 ^
b0 7"
b1010 _
b0 Z
b0 /"
b1010000000000000000000000001 /
b1010000000000000000000000001 J
b1 P
b1 ~
b1 2"
#240
1H
0D
1,
0M
1'
0)
0e
0c
b11111111 i
b11111111 }
0.
#250
0G
0=
b0 F
b0 :
b0 <
b0 ?
b1 C
#259
b1 B
0>
#260
b0 *
b0 ;
b0 L
b0 %"
#280
13
1%
b0 &
b0 2
b0 @
1$
b1 B
b1 E
1.
#320
0.
#360
1.
#400
0.
#440
1.
#480
0.
#520
1.
#560
0.
#600
1.
#640
0.
#680
1.
bx00000000 #
bx00000000 4
bx00000000 7
#720
0.
#760
1.
#800
0.
#840
1.
#880
0.
#920
1.
#960
0.
#1000
1.
#1040
0.
#1080
1.
bx0000000000000000 #
bx0000000000000000 4
bx0000000000000000 7
#1120
0.
#1160
1.
#1200
0.
#1240
1.
#1280
0.
#1320
1.
#1360
0.
#1400
1.
#1440
0.
#1480
1.
bx000000000000000000000000 #
bx000000000000000000000000 4
bx000000000000000000000000 7
#1520
0.
#1560
1.
#1600
0.
#1640
1.
#1680
0.
#1720
1.
#1760
0.
#1800
1.
#1840
0.
#1880
bx &
bx 2
bx @
0$
b11 E
b0 B
1.
03
0%
b0 #
b0 4
b0 7
#1900
1G
#1909
1>
#1920
0.
#1960
0,
b0 E
1.
#1970
b1100 +
b1100 `
0H
#1980
b10000 R
b10000 -"
b10000 T
b10000 *"
b10000 +"
b10000 ]
b10000 ("
#1990
b1011 _
b0 b
b0 3"
b1 a
b1 1"
b0 [
b0 ""
b1011000000000000000100000000 /
b1011000000000000000100000000 J
#2000
b0 U
b0 o
b0 r
b0 u
b0 x
b0 z
b0 $"
1e
0.
#2010
b0 S
b0 '"
b0 ."
b1001 V
b1001 !"
b1001 #"
b0 -
b0 9
b0 O
b0 q
b0 &"
b0 m
b0 w
b1 k
b1 |
b0 l
b0 y
b1001 P
b1001 ~
b1001 2"
b1 (
b1 8
b1 Q
b1 p
b1 s
b1 v
b1 {
b1 0"
#2020
b11110111 i
b11110111 }
b1 n
b1 t
#2040
1.
#2050
b10000 +
b10000 `
#2060
b10100 R
b10100 -"
b10100 T
b10100 *"
b10100 +"
b10100 ]
b10100 ("
#2070
b1 U
b1 o
b1 r
b1 u
b1 x
b1 z
b1 $"
b1000 W
b1000 5"
b10 X
b10 6"
b10 8"
b10 ^
b10 7"
b1000 _
b1 b
b1 3"
b0 a
b0 1"
b10 Z
b10 /"
b1 [
b1 ""
b1000000000100000000000000001 /
b1000000000100000000000000001 J
#2080
b1001 U
b1001 o
b1001 r
b1001 u
b1001 x
b1001 z
b1001 $"
b1 -
b1 9
b1 O
b1 q
b1 &"
1D
1,
0M
b1 m
b1 w
b1 l
b1 y
0'
1)
1\
0e
1c
0.
#2090
b1 U
b1 o
b1 r
b1 u
b1 x
b1 z
b1 $"
b1 V
b1 !"
b1 #"
b1001 -
b1001 9
b1001 O
b1001 q
b1001 &"
b1001 m
b1001 w
b1001 k
b1001 |
b1001 l
b1001 y
1=
b100100000000 :
b10010 n
b10010 t
b11100 h
b11100 )"
b11100 ,"
b1 P
b1 ~
b1 2"
b1001 (
b1001 8
b1001 Q
b1001 p
b1001 s
b1001 v
b1001 {
b1001 0"
#2100
b1 -
b1 9
b1 O
b1 q
b1 &"
b1 m
b1 w
b1 l
b1 y
0G
0=
b0 :
b10 ?
b11111111 i
b11111111 }
#2109
b1 B
0>
#2110
b10 B
1G
1=
b100100000000 :
b0 ?
b1010 n
b1010 t
#2119
b0 B
1>
#2120
b1001 S
b1001 '"
b1001 ."
1M
0,
0D
b1001 *
b1001 ;
b1001 L
b1001 %"
1.
#2130
b10100 +
b10100 `
#2140
b11000 R
b11000 -"
b11000 T
b11000 *"
b11000 +"
b11000 ]
b11000 ("
#2150
b1100 W
b1100 5"
b11 X
b11 6"
b11 8"
b11 ^
b11 7"
b11 Z
b11 /"
b1000000000110000000000000001 /
b1000000000110000000000000001 J
#2160
0.
#2170
b100100 h
b100100 )"
b100100 ,"
#2200
1.
#2210
b11000 +
b11000 `
#2220
b11100 R
b11100 -"
b11100 T
b11100 *"
b11100 +"
b11100 ]
b11100 ("
#2230
b10000 W
b10000 5"
b100 X
b100 6"
b100 8"
b100 ^
b100 7"
b11 _
b100 Z
b100 /"
b11000001000000000000000001 /
b11000001000000000000000001 J
#2240
b11111111 U
b11111111 o
b11111111 r
b11111111 u
b11111111 x
b11111111 z
b11111111 $"
b1010 S
b1010 '"
b1010 ."
b11111111 V
b11111111 !"
b11111111 #"
b1010 -
b1010 9
b1010 O
b1010 q
b1010 &"
0\
b1 Y
b1 j
1g
0.
#2250
b1001 m
b1001 w
b11111111 k
b11111111 |
b11111111 l
b11111111 y
b101100 h
b101100 )"
b101100 ,"
#2260
b1000 S
b1000 '"
b1000 ."
b1000 -
b1000 9
b1000 O
b1000 q
b1000 &"
b1000 n
b1000 t
#2280
1.
#2290
b11100 +
b11100 `
#2300
b100000 R
b100000 -"
b100000 T
b100000 *"
b100000 +"
b100000 ]
b100000 ("
#2310
b0 W
b0 5"
b0 X
b0 6"
b0 8"
b0 ^
b0 7"
b1011 _
b111 b
b111 3"
b100 a
b100 1"
b0 Z
b0 /"
b111 [
b111 ""
b1011000000000000010000000111 /
b1011000000000000010000000111 J
#2320
b11111111 S
b11111111 '"
b11111111 ."
b111 U
b111 o
b111 r
b111 u
b111 x
b111 z
b111 $"
b1 V
b1 !"
b1 #"
1H
1,
b11111111 -
b11111111 9
b11111111 O
b11111111 q
b11111111 &"
0M
1'
0)
1e
0g
b0 Y
b0 j
0c
0.
#2330
b111 S
b111 '"
b111 ."
b0 V
b0 !"
b0 #"
b111 -
b111 9
b111 O
b111 q
b111 &"
b1111 k
b1111 |
b0 m
b0 w
b111 l
b111 y
0G
0=
b0 :
b111 <
b111 ?
b11 C
b100000 h
b100000 )"
b100000 ,"
b0 P
b0 ~
b0 2"
b1000 (
b1000 8
b1000 Q
b1000 p
b1000 s
b1000 v
b1000 {
b1000 0"
#2339
b1 B
0>
#2340
b0 <
b1 ?
b0 *
b0 ;
b0 L
b0 %"
b0 i
b0 }
b1111 n
b1111 t
#2360
13
1%
b1 &
b1 2
b1 @
1$
b1 B
b1 E
1.
#2400
0.
#2440
1.
#2480
0.
#2520
1.
#2560
0.
#2600
1.
#2640
0.
#2680
1.
#2720
0.
#2760
1.
#2800
0.
#2840
1.
#2880
0.
#2920
1.
#2960
0.
#3000
1.
#3040
0.
#3080
1.
#3120
0.
#3160
1.
#3200
0.
#3240
1.
#3280
0.
#3320
1.
#3360
0.
#3400
1.
#3440
0.
#3480
1.
#3520
0.
#3560
1.
#3600
0.
#3640
1.
#3680
0.
#3720
1.
#3760
0.
#3800
1.
#3840
0.
#3880
1.
#3920
0.
#3960
bx &
bx 2
bx @
0$
b11 E
b0 B
1.
03
0%
#3980
1G
#3989
1>
#4000
0.
#4040
0,
b0 E
1.
#4050
b100000 +
b100000 `
0H
#4060
b100100 R
b100100 -"
b100100 T
b100100 *"
b100100 +"
b100100 ]
b100100 ("
#4070
b10100 W
b10100 5"
b101 X
b101 6"
b101 8"
b101 ^
b101 7"
b1001 _
b0 a
b0 1"
b101 Z
b101 /"
b1001000001010000000000000111 /
b1001000001010000000000000111 J
#4080
b0 S
b0 '"
b0 ."
1D
1,
0M
0'
1)
1\
1c
0.
#4090
1=
b1000000000000000000000000000 :
b111000 h
b111000 )"
b111000 ,"
b1001 (
b1001 8
b1001 Q
b1001 p
b1001 s
b1001 v
b1001 {
b1001 0"
#4100
b1000 S
b1000 '"
b1000 ."
b1000 *
b1000 ;
b1000 L
b1000 %"
b1 m
b1 w
#4110
b10000 n
b10000 t
#4120
1M
0,
0D
1.
#4130
b100100 +
b100100 `
#4140
b101000 R
b101000 -"
b101000 T
b101000 *"
b101000 +"
b101000 ]
b101000 ("
#4150
b100000 U
b100000 o
b100000 r
b100000 u
b100000 x
b100000 z
b100000 $"
b11000 W
b11000 5"
b110 X
b110 6"
b110 8"
b110 ^
b110 7"
b0 b
b0 3"
b110 Z
b110 /"
b100000 [
b100000 ""
b1001000001100000000000100000 /
b1001000001100000000000100000 J
#4160
b100000 -
b100000 9
b100000 O
b100000 q
b100000 &"
b101001 k
b101001 |
b0 m
b0 w
b100000 l
b100000 y
0.
#4170
b1001 V
b1001 !"
b1001 #"
b101001 n
b101001 t
b1000000 h
b1000000 )"
b1000000 ,"
b1001 P
b1001 ~
b1001 2"
#4180
b11110111 i
b11110111 }
#4200
1.
#4210
b101000 +
b101000 `
#4220
b101100 R
b101100 -"
b101100 T
b101100 *"
b101100 +"
b101100 ]
b101100 ("
#4230
b0 W
b0 5"
b0 X
b0 6"
b0 8"
b0 ^
b0 7"
b1011 _
b100 a
b100 1"
b0 Z
b0 /"
b1011000000000000010000100000 /
b1011000000000000010000100000 J
#4240
b100000 S
b100000 '"
b100000 ."
1H
1,
0M
1'
0)
0\
0c
0.
#4250
b100100000000 :
b1 <
b0 ?
b0 C
b101100 h
b101100 )"
b101100 ,"
b1000 (
b1000 8
b1000 Q
b1000 p
b1000 s
b1000 v
b1000 {
b1000 0"
#4259
b10 B
0>
#4260
b0 *
b0 ;
b0 L
b0 %"
b101000 k
b101000 |
#4270
b101000 n
b101000 t
#4280
15
1%
b100100000000 !
b100100000000 1
b100100000000 A
b0 &
b0 2
b0 @
1"
b10 B
b10 E
1.
#4320
0.
#4360
1.
#4400
0.
#4440
1.
#4480
0.
#4520
1.
#4560
0.
#4600
1.
#4640
0.
#4680
1.
#4720
0.
#4760
1.
#4800
0.
#4840
1.
#4880
0.
#4920
1.
#4960
0.
#5000
1.
#5040
0.
#5080
1.
#5120
0.
#5160
1.
#5200
0.
#5240
1.
#5280
0.
#5320
1.
#5360
0.
#5400
1.
#5440
0.
#5480
1.
#5520
0.
#5560
1.
#5600
0.
#5640
1.
#5680
0.
#5720
1.
#5760
0.
#5800
1.
#5840
0.
#5880
13
bx !
bx 1
bx A
0"
1$
b1 E
b1 B
1.
05
1%
#5920
0.
#5960
1.
#6000
0.
#6040
1.
#6080
0.
#6120
1.
#6160
0.
#6200
1.
#6240
0.
#6280
1.
#6320
0.
#6360
1.
#6400
0.
#6440
1.
#6480
0.
#6520
1.
#6560
0.
#6600
1.
#6640
0.
#6680
1.
b100100000000 #
b100100000000 4
b100100000000 7
#6720
0.
#6760
1.
#6800
0.
#6840
1.
#6880
0.
#6920
1.
#6960
0.
#7000
1.
#7040
0.
#7080
1.
#7120
0.
#7160
1.
#7200
0.
#7240
1.
#7280
0.
#7320
1.
#7360
0.
#7400
1.
#7440
0.
#7480
bx &
bx 2
bx @
0$
b11 E
b0 B
1.
03
0%
#7500
0=
b1 F
#7509
1>
#7520
0.
#7560
0,
b0 E
1.
#7570
b101100 +
b101100 `
0H
#7580
b110000 R
b110000 -"
b110000 T
b110000 *"
b110000 +"
b110000 ]
b110000 ("
#7590
bx U
bx o
bx r
bx u
bx x
bx z
bx $"
bx ^
bx 7"
bx _
bx b
bx 3"
bx a
bx 1"
bx Z
bx /"
bx [
bx ""
bx /
bx J
#7600
bx S
bx '"
bx ."
bx -
bx 9
bx O
bx q
bx &"
bx1xxx k
bx1xxx |
b0x000 m
b0x000 w
bx l
bx y
0.
#7610
bx V
bx !"
bx #"
bx n
bx t
bx P
bx ~
bx 2"
bx (
bx 8
bx Q
bx p
bx s
bx v
bx {
bx 0"
#7620
bx i
bx }
bx m
bx w
bx k
bx |
#7640
1.
#7650
b110000 +
b110000 `
#7660
b110100 R
b110100 -"
b110100 T
b110100 *"
b110100 +"
b110100 ]
b110100 ("
#7680
0.
#7720
1.
#7730
b110100 +
b110100 `
#7740
b111000 R
b111000 -"
b111000 T
b111000 *"
b111000 +"
b111000 ]
b111000 ("
#7760
0.
#7800
1.
#7810
b111000 +
b111000 `
#7820
b111100 R
b111100 -"
b111100 T
b111100 *"
b111100 +"
b111100 ]
b111100 ("
#7840
0.
#7880
1.
#7890
b111100 +
b111100 `
#7900
b1000000 R
b1000000 -"
b1000000 T
b1000000 *"
b1000000 +"
b1000000 ]
b1000000 ("
#7920
0.
#7960
1.
#7970
b1000000 +
b1000000 `
#7980
b1000100 R
b1000100 -"
b1000100 T
b1000100 *"
b1000100 +"
b1000100 ]
b1000100 ("
#8000
0.
#8040
1.
#8050
b1000100 +
b1000100 `
#8060
b1001000 R
b1001000 -"
b1001000 T
b1001000 *"
b1001000 +"
b1001000 ]
b1001000 ("
